{
  "name": "AAVE Portfolio Professional AI Agent",
  "nodes": [
    {
      "parameters": {
        "chatId": "<<Insert ChatID>>",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2760,
        0
      ],
      "id": "8b4dd2cc-ecb4-46bb-bf3e-7715cf88a108",
      "name": "Telegram",
      "webhookId": "dc4b5b74-52d4-4132-a9ee-4bbb1bd1d93f",
      "credentials": {
        "telegramApi": {
          "id": "l6TLZaqCatJTKOw8",
          "name": "DeFi Monitor"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        620,
        0
      ],
      "id": "6506d454-1cd2-44b7-8207-9797141dce5a",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1320,
        320
      ],
      "id": "94d3ce0c-fafd-4ca0-a767-a164a5b2c160",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "yUizd8t0sD5wMYVG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Get DeFi protocols by wallet",
        "url": "=https://deep-index.moralis.io/api/v2.2/wallets/{{$json.Wallet_Address}}/defi/summary",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1600,
        320
      ],
      "id": "51b04d71-e0fa-48bd-a6bb-80021478010b",
      "name": "getDefiSummary",
      "credentials": {
        "httpHeaderAuth": {
          "id": "lr0Flt0yHKKGlKTj",
          "name": "Moralis"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Get DeFi positions by wallet",
        "url": "=https://deep-index.moralis.io/api/v2.2/wallets/{{$json.Wallet_Address}}/defi/positions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1900,
        320
      ],
      "id": "981c2af0-b001-4f82-903a-b7c843fa0df9",
      "name": "getDefiPositionsSummary",
      "credentials": {
        "httpHeaderAuth": {
          "id": "lr0Flt0yHKKGlKTj",
          "name": "Moralis"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Get detailed DeFi positions by wallet and protocol",
        "url": "=https://deep-index.moralis.io/api/v2.2/wallets/{{$json.Wallet_Address}}/defi/aave-v3/positions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2180,
        320
      ],
      "id": "4f95523b-4877-4f29-a9f1-21c2d153bbb6",
      "name": "getDefiPositionsByProtocol",
      "credentials": {
        "httpHeaderAuth": {
          "id": "lr0Flt0yHKKGlKTj",
          "name": "Moralis"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "don.jayamaha@treasurium.capital",
        "subject": "Aave DeFi Health Report",
        "message": "={{ $json.htmlBody }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        2780,
        260
      ],
      "id": "1df5e729-f892-4a1e-8c4a-f50af0fc318e",
      "name": "Gmail",
      "webhookId": "ef883c10-ea03-44f0-b7f7-e3c855cdb175",
      "credentials": {
        "gmailOAuth2": {
          "id": "gJq9VKcqPXjhNh02",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const aiOutput = $json.output || \"No data available.\";\nconst date = new Date().toISOString().split('T')[0];\n\n// Extract wallet using regex\nconst walletMatch = aiOutput.match(/Wallet:\\s*(0x[a-fA-F0-9]{40})/);\nconst wallet = walletMatch ? walletMatch[1] : \"Unknown Wallet\";\n\n// Convert \\n to <br> for HTML formatting\nconst htmlFormatted = aiOutput\n  .replace(/---/g, '<hr>') // Replace section breaks\n  .replace(/\\n{2,}/g, '<br><br>') // Extra line spacing between sections\n  .replace(/\\n/g, '<br>'); // Standard line breaks\n\n// Wrap in basic HTML styling\nconst htmlBody = `\n  <div style=\"font-family: Arial, sans-serif; font-size: 14px; line-height: 1.6; color: #222;\">\n    ${htmlFormatted}\n  </div>\n`;\n\nconst textBody = aiOutput;\nconst subject = `üõ°Ô∏è Aave DeFi Health Report ‚Äì ${date}`;\n\nreturn [\n  {\n    json: {\n      wallet,\n      subject,\n      htmlBody,\n      textBody\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2480,
        260
      ],
      "id": "60badfca-b47c-4e07-abc4-be75e2297a71",
      "name": "Format Email"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.Wallet_Address }}",
        "options": {
          "systemMessage": "You are a blockchain DeFi data assistant. Your task is to fetch, analyze, and summarize Aave-related DeFi positions using the Moralis DeFi API, then deliver a human-readable report to the user via Telegram.\n\nYour task is to:\n1. Fetch, analyze, and summarize Aave-related DeFi positions using the Moralis DeFi API.\n2. Collect data from the following three API endpoints:\n   - **getDefiSummary**  \n     URL: https://deep-index.moralis.io/api/v2.2/wallets/{{ $json.wallet_address }}/defi/summary  \n     Description: Retrieves a list of all DeFi protocols the wallet is interacting with.\n\n   - **getDefiPositionsSummary**  \n     URL: https://deep-index.moralis.io/api/v2.2/wallets/{{ $json.wallet_address }}/defi/positions  \n     Description: Provides a summary of DeFi protocol positions for the wallet, including collateral and debt levels.\n\n   - **getDefiPositionsByProtocol**  \n     URL: https://deep-index.moralis.io/api/v2.2/wallets/{{ $json.wallet_address }}/defi/aave-v3/positions  \n     Description: Returns detailed Aave position data, including pool details, underlying assets, balances, and health factors.\n\nüîπ Your output format must follow this structure:\n\n1Ô∏è‚É£ **Header**  \nüìä Aave DeFi Health Report\nWallet: {{wallet_address}}\nDate: {{$json.current_date}}\n\n2Ô∏è‚É£ **Position Summary (Loop over each Aave pool position)**  \n\n‚ñ™Ô∏è Pool: {{pool_name}}\n‚Ä¢ Supply: ${{supplyBalanceUSD}}\n‚Ä¢ Borrowed: ${{borrowBalanceUSD}}\n‚Ä¢ Collateral: ${{collateralValueUSD}}\n‚Ä¢ Health Factor: {{healthFactor}}\n‚Ä¢ Liquidation Threshold: {{liquidationThreshold}}\n‚Ä¢ Liquidation Risk: {{liquidationRisk ? \"‚ö†Ô∏è Yes\" : \"No\"}}\n\nUnderlying Assets:\n{{#each underlyingAssets}}\n- {{name}} ({{symbol}}): {{balance}}\n{{/each}}\n\n\n, \n\n4Ô∏è‚É£ **Readable Numbers:**  \n- Format large numbers with commas (e.g., `15,000` instead of `15000`).\n- Display ETH values to 4 decimal places for easy reading.\n\n5Ô∏è‚É£ **Fallback Message**  \nIf no Aave data is found, reply with:\n\n‚ùå No Aave V3 positions found for this wallet.\n\n6Ô∏è‚É£ **Example Telegram Output:**  \n\nüìä Aave DeFi Health Report\nWallet: 0xA221674eDB403A8F714F66Af74a2332c3CB5C0c3\nDate: 2025-05-08\n\n‚ñ™Ô∏è Pool: Aave Lending Pool\n‚Ä¢ Supply: $15,000.00\n‚Ä¢ Borrowed: $7,500.00\n‚Ä¢ Collateral: $15,000.00\n‚Ä¢ Health Factor: 2.00\n‚Ä¢ Liquidation Threshold: 1.05\n‚Ä¢ Liquidation Risk: No\n‚Ä¢ Net Worth\nUnderlying Assets:\n\nDAI: 10,000\n\nUSDC: 5,000\n\n\nüîπ **Instructions:**  \n- Fetch data directly from the Moralis API endpoints provided.  \n- Parse and format the response according to the structure above.  \n- Send the formatted message to the specified Telegram Chat ID.  \n- If no data is available, send the fallback message instead.  \n- This report should be updated every 30 minutes and triggered on critical health factors (<1.1).\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1740,
        0
      ],
      "id": "cf7e92d5-5201-4273-a65d-bb80f2d1f993",
      "name": "AAVE Portfolio Professional AI Agent"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1rTPT4-e8AER5xJkm297ibk3e4wVhDd5zSi66kTOCW0U",
          "mode": "list",
          "cachedResultName": "Aave Wallet Address",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1rTPT4-e8AER5xJkm297ibk3e4wVhDd5zSi66kTOCW0U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1rTPT4-e8AER5xJkm297ibk3e4wVhDd5zSi66kTOCW0U/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        980,
        0
      ],
      "id": "b57ddee3-7b92-4e89-9f58-37855a86ab31",
      "name": "Wallet Addresses to Monitor",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "vHcPQdCHeNGUtbT0",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "92ced85e-ea59-4c12-9ee9-fe0b46a91ed4",
              "name": "Wallet_Address",
              "value": "={{ $json.wallet_address }}",
              "type": "string"
            },
            {
              "id": "da0fed7a-5fe0-4202-b8e6-f8ccb7efcebe",
              "name": "=current_date",
              "value": "={{ new Date().toISOString().split('T')[0] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1340,
        0
      ],
      "id": "16293754-9aa6-4c6c-b9c5-e630e0ccbe25",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "content": "## ‚è∞ Scheduler\n\nüîÅ Triggers the workflow at fixed intervals (default: every X hours)\n\n‚úÖ Used for automatic periodic scanning of all wallets in the sheet.\n",
        "height": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        540,
        -240
      ],
      "typeVersion": 1,
      "id": "40cde5ac-8e8c-4e34-8ed8-24f2e13933cd",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## üìÑ Google Sheets Wallet Loader\n\nüìå Purpose: Loads wallet addresses from a Google Sheet\n\n‚ûï Add wallet: Insert a new row\n‚ûñ Remove wallet: Delete the row\n\n‚ö†Ô∏è Required column: `wallet_address`\nüóÇÔ∏è Source Sheet: [Google Sheet link]\n",
        "height": 520,
        "width": 260,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        900,
        -340
      ],
      "typeVersion": 1,
      "id": "72748224-3c09-4cc0-8607-d64788b35c0f",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## üß© Set Variables\n\nü™™ `Wallet_Address` ‚Äì used in all API calls and report labels  \nüìÖ `current_date` ‚Äì dynamically generates today's date in `YYYY-MM-DD` format\n\n‚úÖ Enables personalized reporting per wallet\n",
        "height": 440,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1260,
        -260
      ],
      "typeVersion": 1,
      "id": "e1b4d506-5859-466b-8754-2e2bd2630685",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## ü§ñ Aave AI Report Generator\n\nüß† Uses LangChain + GPT to generate a DeFi health report for Aave V3 positions\n\nüì• Input: `Wallet_Address`, `current_date`\nüìä Fetches data from Moralis API:\n  - /defi/summary\n  - /defi/positions\n  - /defi/aave-v3/positions\n\nüßæ Outputs formatted message sent to:\n- Telegram\n- Email\n",
        "height": 520,
        "width": 500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1620,
        -340
      ],
      "typeVersion": 1,
      "id": "d2494da5-0196-438a-8da8-02fba036ab3b",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n## üì° Moralis API ‚Äì DeFi Summary\n\nüîé URL (dynamic): /wallets/{{$json.Wallet_Address}}/defi/summary  \nüìã Description: Fetches protocols wallet is using  \n‚ö†Ô∏è Requires valid Moralis API Key (HTTP Header Auth)\n",
        "height": 460,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1520,
        280
      ],
      "typeVersion": 1,
      "id": "b27d9c2c-853c-4aad-891d-eb1722089b17",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## üì° Moralis API ‚Äì Position Summary\n\nüîé URL (dynamic): /wallets/{{$json.Wallet_Address}}/defi/positions  \nüìã Description: Gets protocol-level position data (supply, borrow, collateral)  \n‚ö†Ô∏è Required for high-level Aave analysis\n",
        "height": 460,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1820,
        280
      ],
      "typeVersion": 1,
      "id": "956ddef2-e2cb-4203-8aa1-e1bed07895f7",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n## üì° Moralis API ‚Äì Aave V3 Details\n\nüîé URL (dynamic): /wallets/{{$json.Wallet_Address}}/defi/aave-v3/positions  \nüìã Description: Gets pool-level breakdown (assets, health factor, risk)  \nüö® Critical for liquidation monitoring\n",
        "height": 460,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2100,
        280
      ],
      "typeVersion": 1,
      "id": "30a23bfd-ea48-473d-b72c-0164c278d7b4",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## üìß Send Aave Report via Gmail\n\nüì§ Sends formatted HTML email report  \nüì• Input: `htmlBody`, `subject` from code node  \nüìå To: <<Replace Email>>\n\n‚úÖ Requires Gmail OAuth2 credential\n",
        "height": 560,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2700,
        200
      ],
      "typeVersion": 1,
      "id": "5ca1a63a-c5a3-4a96-a1b4-9942ef73467d",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## üì® Format Email Report\n\nüßæ Converts report to HTML + plain text for Gmail delivery  \nü™™ Uses: `Wallet_Address`, `current_date`  \nüìÖ Date is auto-formatted on each run\n\n‚ö†Ô∏è Replace static wallet/date if hardcoded\n",
        "height": 560,
        "width": 260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2400,
        200
      ],
      "typeVersion": 1,
      "id": "45ee0bc1-5c11-4b18-9f2f-8b09d015e6e8",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## üì≤ Telegram Message Delivery\n\nüì§ Sends Aave summary message to Telegram chat  \nüì• Input: AI output in Markdown/HTML format  \n‚úÖ Used for real-time updates and alerts\n\nüìå Chat ID: <<Replace ChatId>>\n",
        "height": 480,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2700,
        -300
      ],
      "typeVersion": 1,
      "id": "9b5d76f4-2e46-4847-a360-f4f2b3927e43",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n## üß† OpenAI Chat Model\n\nüìå Model: `gpt-4o-mini` (high-speed, multi-modal optimized)\n\nüéØ Role: Processes prompts and generates DeFi summaries and insights  \nüîó Connected to LangChain Agent node  \nüì• Inputs: `Wallet_Address`, `current_date`  \nüì§ Output: Natural language Telegram/Email report via AI Agent\n\n‚úÖ Ensure your OpenAI API credentials are set\n",
        "height": 560,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1220,
        280
      ],
      "typeVersion": 1,
      "id": "7384fbd5-7964-4b2a-a0bd-fa715217cac0",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "# üß† AAVE Portfolio Professional AI Agent ‚Äì Full System Documentation\n\nA next-generation AI-powered DeFi portfolio analyzer built to monitor **multiple wallet addresses** and generate structured Aave V3 health reports via Telegram and Email using LangChain + GPT-4o + Moralis API.\n\n---\n\n## üß© Included Components (Workflows)\n\n> Download and install the following nodes and credentials to ensure full system operation.\n\n| Component Name                         | Function                                                               |\n| -------------------------------------- | ---------------------------------------------------------------------- |\n| ‚úÖ Schedule Trigger                     | Runs the agent periodically (e.g. every hour)                          |\n| ‚úÖ Google Sheets Wallet Loader          | Reads wallet addresses from a Google Sheet                             |\n| ‚úÖ Set Variables                        | Injects wallet address + current date into the flow                    |\n| ‚úÖ AAVE Portfolio Professional AI Agent | LangChain Agent calling OpenAI + Moralis APIs to analyze wallet health |\n| ‚úÖ Moralis API Nodes (3)                | Fetches DeFi summary, positions, and Aave V3-specific data             |\n| ‚úÖ OpenAI Chat Model                    | Provides GPT-4o-mini language model for report generation              |\n| ‚úÖ Format Email                         | Converts AI output into styled HTML + plain text                       |\n| ‚úÖ Telegram Message Delivery            | Sends summary report to Telegram chat                                  |\n| ‚úÖ Gmail Email Sender                   | Sends full HTML report to configured email address                     |\n\n---\n\n## ‚öôÔ∏è Installation Instructions\n\n### Step 1: Import Workflow\n\n1. Open your **n8n editor UI**.\n2. Import the `AAVE_Portfolio_Professional_AI_Agent.json` file.\n3. Ensure all nodes are **connected**, especially Google Sheets ‚Üí AI Agent.\n\n### Step 2: Google Sheets Setup\n\n1. Create a new sheet with a column titled `wallet_address`.\n2. Add the Ethereum wallet addresses you want to monitor in each row.\n3. Connect your Google Sheets OAuth2 credential to the workflow.\n\n### Step 3: Credentials Setup\n\n| Service  | Type             | Setup Instructions                                                |\n| -------- | ---------------- | ----------------------------------------------------------------- |\n| Moralis  | HTTP Header Auth | Add `X-API-Key: YOUR_MORALIS_KEY`                                 |\n| OpenAI   | OpenAI API       | Use `gpt-4o-mini` or your preferred model                         |\n| Gmail    | Gmail OAuth2     | Connect your Google Account for email delivery                    |\n| Telegram | Telegram Bot API | Link your bot with the correct Chat ID (`539847013` or as needed) |\n\n---\n\n## üñ•Ô∏è System Overview\n\n**Data Flow:**\n\n```\n[Scheduler or Manual Run] \n‚Üí [Google Sheet: Wallets] \n‚Üí [Set Wallet + Date]\n‚Üí [Moralis API Data Fetch] \n‚Üí [LangChain + GPT Summary]\n‚Üí [Telegram + Email Report Delivery]\n```\n\n**Analysis Includes:**\n\n* Supply / Borrow / Collateral per pool\n* Liquidation threshold & health factor\n* Asset-level breakdowns (e.g., WBTC, USDC)\n* Liquidation risk alerts (‚ö†Ô∏è)\n\n---\n\n## üì¨ Output Format\n\n* Telegram Message: human-readable summary for each wallet\n* Email Report: full HTML + plain text with tables and asset detail\n* Includes dynamic wallet address and current date per report\n\n---\n\n## üîß Customization Ideas\n\n* Add Telegram commands like `/aave 0x123...` to trigger on-demand\n* Set health-factor alerts (< 1.2) to notify immediately\n* Export to Notion, CSV, or build dashboard integrations\n\n---\n\n## üöÄ Support & Licensing\n\nüîó **Don Jayamaha ‚Äì LinkedIn**\n[http://linkedin.com/in/donjayamahajr](http://linkedin.com/in/donjayamahajr)\n\n¬© 2025 Treasurium Capital Limited Company. All rights reserved.\nThis AI workflow system, including prompt logic, integration structure, and tooling, is proprietary to **Treasurium Capital**. Reuse, repackaging, or resale is prohibited without license. Educational use permitted with attribution.\n\n\n",
        "height": 2180,
        "width": 1280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3240,
        -1400
      ],
      "typeVersion": 1,
      "id": "9baa4c9d-2cb0-40bb-bdb8-cea460451024",
      "name": "Sticky Note11"
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Wallet Addresses to Monitor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AAVE Portfolio Professional AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "getDefiSummary": {
      "ai_tool": [
        [
          {
            "node": "AAVE Portfolio Professional AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "getDefiPositionsSummary": {
      "ai_tool": [
        [
          {
            "node": "AAVE Portfolio Professional AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "getDefiPositionsByProtocol": {
      "ai_tool": [
        [
          {
            "node": "AAVE Portfolio Professional AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Format Email": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AAVE Portfolio Professional AI Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          },
          {
            "node": "Format Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wallet Addresses to Monitor": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AAVE Portfolio Professional AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0f2602e9-4654-4181-af14-06438b8a3a32",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a5283507e1917a33cc3ae615b2e7d5ad2c1e50955e6f831272ddd5ab816f3fb6"
  },
  "id": "ECZnCUL1v6EUrpHN",
  "tags": []
}